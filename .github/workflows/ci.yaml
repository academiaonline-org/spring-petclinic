name: CI
on: 
  push:
    branches: 
    - docker
jobs: 
  docker: 
    runs-on: ubuntu-18.04
    steps: 
    - 
      name: checkout
      uses: actions/checkout@v2
    -
      name: test
      run: |
        set -x
        find
        docker build -t test --no-cache .
        docker run -d -p 8080:8080 --name test test 
        while true
          do
            sleep 10
            docker exec test ps | grep "1.*java -jar spring-petclinic.jar" && break
          done
        while true
          do
            sleep 10
            curl localhost:8080 | grep "PetClinic :: a Spring Framework demonstration" && break
          done
  swarm: 
    env:
      mode: swarm
    runs-on: ubuntu-18.04
    steps:
    - 
      name: checkout
      uses: actions/checkout@v2
    -
      name: test
      run: |
        set -x
        branch=$(basename $GITHUB_REF)
        project=$(basename $GITHUB_REPOSITORY)
        compose=etc/$mode/$project.yaml
        sed -i /image:.*$project/s/latest/$branch/ $compose
        docker build -t $GITHUB_REPOSITORY:$branch --no-cache .
        find
        docker swarm init
        sed -i s/worker/manager/ $compose
        docker stack deploy -c $compose $project
        while true
          do
            sleep 10
            docker service ls
            docker service ls | grep '\([0-9]\)/\1' && break
          done
        while true
          do
            sleep 10
            curl localhost:8080 | grep "PetClinic :: a Spring Framework demonstration" && break
          done
